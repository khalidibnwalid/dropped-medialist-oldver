generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [uuidOssp(map: "uuid-ossp")]
}

model collections {
  id             String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title          String       @unique @db.VarChar
  cover_path     String?      @db.VarChar
  pincode        String?      @db.VarChar
  templates      Json?
  configurations Json?
  fav            Boolean?     @default(false)
  trash          Boolean?     @default(false)
  items          items[]
  items_tags     items_tags[]
}

model items {
  id             String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  collection_id  String?        @db.Uuid
  title          String         @db.VarChar
  poster_path    String?        @db.VarChar
  cover_path     String?        @db.VarChar
  description    String?
  content_fields Json[]
  extra_fields   Json[]
  main_fields    Json[]
  related        String[]       @db.VarChar
  tags           String[]       @db.VarChar
  links          Json[]
  badges         Json[]
  progress_state Json?
  date_created   DateTime?      @default(now()) @db.Timestamp(6)
  configurations Json?
  fav            Boolean        @default(false)
  trash          Boolean        @default(false)
  collections    collections?   @relation(fields: [collection_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  items_images   items_images[]
}

model items_images {
  id           String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  image_path   String    @db.VarChar
  item_id      String?   @db.Uuid
  title        String?   @db.VarChar
  description  String?
  date_created DateTime? @default(now()) @db.Timestamp(6)
  items        items?    @relation(fields: [item_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model items_tags {
  id            String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  collection_id String?      @db.Uuid
  name          String       @db.VarChar
  description   String?
  group_name    String?      @db.VarChar
  collections   collections? @relation(fields: [collection_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
